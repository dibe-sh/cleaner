name: CI

on:
    push:
        branches:
            - main
    pull_request:
    workflow_dispatch:

permissions:
    contents: write # Grant write permissions to GITHUB_TOKEN

jobs:
    test:
        runs-on: ${{ matrix.os }}
        strategy:
            matrix:
                go-version: [1.20] # Updated Go version
                os: [windows-latest, macos-latest, ubuntu-latest]
                arch: [amd64, arm64]
                exclude:
                    - os: windows-latest
                      arch: arm64 # Exclude Windows ARM64 as it's not commonly supported
                    - os: windows-latest
                      go-version: 1.16 # Exclude Go 1.16 on Windows

        steps:
            - name: Checkout code
              uses: actions/checkout@v3

            - name: Set up Go
              uses: actions/setup-go@v4
              with:
                  go-version: ${{ matrix.go-version }}

            - name: Set environment variables
              run: |
                  echo "GOARCH=${{ matrix.arch }}" >> $GITHUB_ENV
                  if [[ "${{ matrix.os }}" == 'windows-latest' ]]; then
                    echo "GOOS=windows" >> $GITHUB_ENV
                    echo "EXT=.exe" >> $GITHUB_ENV
                  elif [[ "${{ matrix.os }}" == 'macos-latest' ]]; then
                    echo "GOOS=darwin" >> $GITHUB_ENV
                    echo "EXT=" >> $GITHUB_ENV
                  else
                    echo "GOOS=linux" >> $GITHUB_ENV
                    echo "EXT=" >> $GITHUB_ENV
                  fi

            - name: Run Tests
              run: |
                  go test -v ./...

            - name: Build binary
              run: |
                  mkdir -p build
                  GOOS=${{ env.GOOS }} GOARCH=${{ matrix.arch }} go build -ldflags="-s -w" -o build/cleaner-${{ env.GOOS }}-${{ matrix.arch }}${{ env.EXT }}

            - name: Upload artifact
              uses: actions/upload-artifact@v3
              with:
                  name: build
                  path: build/*

    release:
        needs: test
        runs-on: ubuntu-latest
        if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/')

        steps:
            - name: Checkout code
              uses: actions/checkout@v3

            - name: Download artifacts
              uses: actions/download-artifact@v3
              with:
                  name: build
                  path: ./build

            - name: Create Release
              uses: ncipollo/release-action@v1
              with:
                  token: ${{ secrets.GITHUB_TOKEN }}
                  tag: ${{ github.ref_name }}
                  name: Release ${{ github.ref_name }}
                  body: |
                      Automated release for ${{ github.ref_name }}
                  artifacts: |
                      ./build/*
