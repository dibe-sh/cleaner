name: CI

on:
    push:
        branches:
            - main
    pull_request:
    workflow_dispatch:

permissions:
    contents: write # Grant write permissions to GITHUB_TOKEN

jobs:
    test:
        runs-on: ${{ matrix.os }}
        strategy:
            matrix:
                go-version: [1.20] # Updated Go version
                os: [windows-latest, macos-latest, ubuntu-latest]
                exclude:
                    - os: windows-latest
                      # Exclude combinations that are not supported
        steps:
            - name: Checkout code
              uses: actions/checkout@v3

            - name: Set up Go
              uses: actions/setup-go@v4
              with:
                  go-version: ${{ matrix.go-version }}

            - name: Run Tests
              run: go test -v ./...

    build:
        runs-on: ubuntu-latest
        needs: test
        strategy:
            matrix:
                go-version: [1.20]
                goos: [linux, windows, darwin]
                goarch: [amd64, arm64]
                exclude:
                    - goos: windows
                      goarch: arm64 # Windows ARM64 cross-compilation may have issues
                    - goos: darwin
                      goarch: arm64 # Cross-compiling darwin/arm64 on linux requires extra setup
        steps:
            - name: Checkout code
              uses: actions/checkout@v3

            - name: Set up Go
              uses: actions/setup-go@v4
              with:
                  go-version: ${{ matrix.go-version }}

            - name: Build binary
              run: |
                  mkdir -p build
                  EXT=""
                  if [ "${{ matrix.goos }}" = "windows" ]; then
                    EXT=".exe"
                  fi
                  GOOS=${{ matrix.goos }} GOARCH=${{ matrix.goarch }} go build -ldflags="-s -w" -o build/cleaner-${{ matrix.goos }}-${{ matrix.goarch }}$EXT

            - name: Upload artifact
              uses: actions/upload-artifact@v3
              with:
                  name: build
                  path: build/*

    release:
        needs: build
        runs-on: ubuntu-latest
        if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/')

        steps:
            - name: Checkout code
              uses: actions/checkout@v3

            - name: Download artifacts
              uses: actions/download-artifact@v3
              with:
                  name: build
                  path: ./build

            - name: Create Release
              uses: ncipollo/release-action@v1
              with:
                  token: ${{ secrets.GITHUB_TOKEN }}
                  tag: ${{ github.ref_name }}
                  name: Release ${{ github.ref_name }}
                  body: |
                      Automated release for ${{ github.ref_name }}
                  artifacts: |
                      ./build/*
